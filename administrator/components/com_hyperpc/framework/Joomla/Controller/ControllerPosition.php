<?php
/**
 * HYPERPC - The shop of powerful computers.
 *
 * This file is part of the HYPERPC package.
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @package     HYPERPC
 * @license     Proprietary
 * @copyright   Proprietary https://hyperpc.ru/license
 * @link        https://github.com/HYPER-PC/HYPERPC".
 *
 * @author      Sergey Kalistratov <kalistratov.s.m@gmail.com>
 * @desc        This class overrides the Joomla! ControllerForm standard class.
 */

namespace HYPERPC\Joomla\Controller;

use HYPERPC\App;
use Joomla\CMS\MVC\Controller\FormController;

/**
 * Class ControllerPosition
 *
 * @package HYPERPC\Joomla\Controller
 *
 * @since   2.0
 */
class ControllerPosition extends ControllerForm
{

    /**
     * Method to cancel on edit.
     *
     * @param   string $key     The name of the primary key of the URL variable.
     *
     * @return  boolean         True if access level checks pass, false otherwise.
     *
     * @since   2.0
     */
    public function cancel($key = null)
    {
        $this->view_list = 'positions';

        return parent::cancel($key);
    }

    /**
     * Method to save a record.
     *
     * @param   string $key     The name of the primary key of the URL variable.
     * @param   string $urlVar  The name of the URL variable if different from the primary key.
     *
     * @return  boolean         True if successful, false otherwise.
     *
     * @since   2.0
     */
    public function save($key = null, $urlVar = null)
    {
        $this->view_list = 'positions';

        return parent::save($key, $urlVar); // TODO: Change the autogenerated stub
    }

    /**
     * Gets the URL arguments to append to an item redirect.
     *
     * @param   null|int|string     $recordId
     * @param   string              $urlVar
     *
     * @return  string
     *
     * @since   2.0
     */
    protected function getRedirectToItemAppend($recordId = null, $urlVar = 'id')
    {
        $append  = parent::getRedirectToItemAppend($recordId, $urlVar);
        $folder_id = $this->hyper['input']->get('product_folder_id');

        if ($folder_id !== null) {
            $append .= '&product_folder_id=' . $folder_id;
        }

        return $append;
    }

    /**
     * Gets the URL arguments to append to a list redirect.
     *
     * @return  string
     *
     * @since   2.0
     */
    protected function getRedirectToListAppend()
    {
        $append  = parent::getRedirectToListAppend();
        $folder_id = $this->hyper['input']->get('product_folder_id');

        if ($folder_id !== null) {
            $append .= '&folder_id=' . $folder_id;
        }

        return $append;
    }
}
